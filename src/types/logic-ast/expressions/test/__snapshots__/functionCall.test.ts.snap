// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`functionCall expression Example 1 1`] = `
Object {
  "data": Object {
    "arguments": Array [
      Object {
        "data": Object {
          "expression": Object {
            "data": Object {
              "id": "0",
              "literal": Object {
                "data": Object {
                  "id": "0",
                  "value": "pink",
                },
                "type": "color",
              },
            },
            "type": "literalExpression",
          },
          "id": "0",
          "label": "light",
        },
        "type": "argument",
      },
      Object {
        "data": Object {
          "expression": Object {
            "data": Object {
              "id": "0",
              "literal": Object {
                "data": Object {
                  "id": "0",
                  "value": "purple",
                },
                "type": "color",
              },
            },
            "type": "literalExpression",
          },
          "id": "0",
          "label": "dark",
        },
        "type": "argument",
      },
      Object {
        "data": Object {
          "id": "0",
        },
        "type": "placeholder",
      },
    ],
    "expression": Object {
      "data": Object {
        "id": "0",
        "identifier": Object {
          "id": "0",
          "isPlaceholder": false,
          "string": "ThemedColor",
        },
      },
      "type": "identifierExpression",
    },
    "id": "0",
  },
  "type": "functionCallExpression",
}
`;

exports[`functionCall expression Example 2 1`] = `
Object {
  "data": Object {
    "arguments": Array [
      Object {
        "data": Object {
          "id": "0",
        },
        "type": "placeholder",
      },
    ],
    "expression": Object {
      "data": Object {
        "expression": Object {
          "data": Object {
            "id": "0",
            "identifier": Object {
              "id": "0",
              "isPlaceholder": false,
              "string": "Optional",
            },
          },
          "type": "identifierExpression",
        },
        "id": "0",
        "memberName": Object {
          "id": "0",
          "isPlaceholder": false,
          "string": "none",
        },
      },
      "type": "memberExpression",
    },
    "id": "0",
  },
  "type": "functionCallExpression",
}
`;
